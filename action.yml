name: 'Checkmarx One++ GitHub Action'
description: 'Orchestrates vulnerability scanning and issue tracker item lifecycle.'
author: 'Nathan Leach, Principal Solutions Architect, Checkmarx'

inputs:
  base-uri:
    required: true
    description: 'Provide the CxOne portal URL'
  cx-tenant:
    required: true
    description: 'Provide the Tenant for CxOne portal URL'
  cx-client-id:
    required: true
    description: 'OAuth Client ID for API access'
  cx-client-secret:
    required: true
    description: 'OAuth client secret key for API access'
  project-name:
    required: false
    default: ${{ github.repository }}
    description: 'Scan project name'
  additional-scan-params:
    required: false
    default: ''
    description: 'Additional parameters passed to the CxOne CLI after scan create'

  container-image:
    required: true
    description: The container tag that was made with the cx-supply-chain-toolkit.

  docker-login-registry:
    default: docker.io
    description: The name of the container registry to use for login.
  docker-login-username:
    default: ''
    description: The username for the container registry login.
  docker-login-password:
    default: ''
    description: The password for the container registry login.

  upload-sarif-file:
    default: true
    description: Uploads the Sarif file to create entries on the GitHub security tab during push events. 

  show-versions:
    default: true
    description: If true, emits the versions of the CxOne CLI and SCA Resolver in the action log.

  container-run-command:
    default: 'docker run'
    description: The command used to execute the container.
  container-run-command-params:
    default: 'docker run'
    description: The command used to execute the container.


runs:
  using: 'composite'
  steps:

    - name: foo
      shell: bash
      run: |
        echo hello world
        echo show-versions: ${{ inputs.show-versions }}
        echo container-image: ${{ inputs.container-image}}

    
    - name: Show Versions
      if: ${{ inputs.show-versions }}
      shell: bash
      run: |
        docker run -t --rm ${{ inputs.container-image}} --version | cat -v | sed -E 's/.*(CxSCA Resolver.[0-9.]+)\^M$/\1/g'
        echo CxOne CLI $(docker run -t --rm ${{ inputs.container-image}} cxone version)





branding:
  color: 'green'
  icon: 'layers'